# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image and Deploy to DigitalOcean

on:
 push:
    tags:
      - '*'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-22.04 #same as on Digital Ocean Droplet
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v3
        with:
         path: |
          .build/artifacts
          .build/checkouts
          .build/repositories
          .build/workspace-state.json
         key: test-spm-${{ runner.os }}-${{ hashFiles('Package.swift', 'Package.resolved') }}
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: 3a4ot/bydye-backend
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Connect to DigitalOcean and deploy via docker compose
        uses: appleboy/ssh-action@v1.0.0
        with:
         host: ${{ secrets.DROPLET_HOST }}
         username: ${{ secrets.DROPLET_USERNAME }}
         key: ${{ secrets.DROPLET_SSH_PRIVATE_KEY }}
         port: ${{ secrets.DROPLET_PORT }}
         script: |
          cd bydye/
          docker compose pull
          docker compose up -d app
          docker container prune -f
          docker image prune -f
          docker network prune -f
          docker volume prune -f